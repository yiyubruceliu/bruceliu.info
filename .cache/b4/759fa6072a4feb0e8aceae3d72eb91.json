{"id":"node_modules/filed/rfc822.js","dependencies":[{"name":"C:\\Users\\Legion\\Projects\\bruceliu.info\\package.json","includedInParent":true,"mtime":1579348604596},{"name":"C:\\Users\\Legion\\Projects\\bruceliu.info\\node_modules\\filed\\package.json","includedInParent":true,"mtime":1579348603845}],"generated":{"js":"// Support for rfc822, worst standard EVAR!\n\n// require('./date')\n\nfunction getRFC822Date(oDate)\n{\n  var aMonths = new Array(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                          \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\");\n\n  var aDays = new Array( \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\");\n  var dtm = new String();\n\n  dtm = aDays[oDate.getDay()] + \", \";\n  dtm += padWithZero(oDate.getDate()) + \" \";\n  dtm += aMonths[oDate.getMonth()] + \" \";\n  dtm += oDate.getFullYear() + \" \";\n  dtm += padWithZero(oDate.getHours()) + \":\";\n  dtm += padWithZero(oDate.getMinutes()) + \":\";\n  dtm += padWithZero(oDate.getSeconds()) + \" \" ;\n  dtm += getTZOString(oDate.getTimezoneOffset());\n  return dtm;\n}\n//Pads numbers with a preceding 0 if the number is less than 10.\nfunction padWithZero(val)\n{\n  if (parseInt(val) < 10)\n  {\n    return \"0\" + val;\n  }\n  return val;\n}\n\n/* accepts the client's time zone offset from GMT in minutes as a parameter.\nreturns the timezone offset in the format [+|-}DDDD */\nfunction getTZOString(timezoneOffset)\n{\n  var hours = Math.floor(timezoneOffset/60);\n  var modMin = Math.abs(timezoneOffset%60);\n  var s = new String();\n  s += (hours > 0) ? \"-\" : \"+\";\n  var absHours = Math.abs(hours)\n  s += (absHours < 10) ? \"0\" + absHours :absHours;\n  s += ((modMin == 0) ? \"00\" : modMin);\n  return(s);\n}\n\nexports.getRFC822Date = getRFC822Date;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/filed/rfc822.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/filed/rfc822.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"node_modules/filed/rfc822.js":"// Support for rfc822, worst standard EVAR!\n\n// require('./date')\n\nfunction getRFC822Date(oDate)\n{\n  var aMonths = new Array(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n                          \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\");\n\n  var aDays = new Array( \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\");\n  var dtm = new String();\n\n  dtm = aDays[oDate.getDay()] + \", \";\n  dtm += padWithZero(oDate.getDate()) + \" \";\n  dtm += aMonths[oDate.getMonth()] + \" \";\n  dtm += oDate.getFullYear() + \" \";\n  dtm += padWithZero(oDate.getHours()) + \":\";\n  dtm += padWithZero(oDate.getMinutes()) + \":\";\n  dtm += padWithZero(oDate.getSeconds()) + \" \" ;\n  dtm += getTZOString(oDate.getTimezoneOffset());\n  return dtm;\n}\n//Pads numbers with a preceding 0 if the number is less than 10.\nfunction padWithZero(val)\n{\n  if (parseInt(val) < 10)\n  {\n    return \"0\" + val;\n  }\n  return val;\n}\n\n/* accepts the client's time zone offset from GMT in minutes as a parameter.\nreturns the timezone offset in the format [+|-}DDDD */\nfunction getTZOString(timezoneOffset)\n{\n  var hours = Math.floor(timezoneOffset/60);\n  var modMin = Math.abs(timezoneOffset%60);\n  var s = new String();\n  s += (hours > 0) ? \"-\" : \"+\";\n  var absHours = Math.abs(hours)\n  s += (absHours < 10) ? \"0\" + absHours :absHours;\n  s += ((modMin == 0) ? \"00\" : modMin);\n  return(s);\n}\n\nexports.getRFC822Date = getRFC822Date;\n"},"lineCount":48}},"error":null,"hash":"1a1683e84be0f8638a9867f818c4206c","cacheData":{"env":{}}}